$version Generated by VerilatedVcd $end
$date Tue May 26 10:53:21 2020
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 2 blue $end
  $var wire  1 1 green $end
  $var wire  1 # hz100 $end
  $var wire  8 . left [7:0] $end
  $var wire 21 % pb [20:0] $end
  $var wire  1 0 red $end
  $var wire  1 $ reset $end
  $var wire  8 / right [7:0] $end
  $var wire  1 7 rxclk $end
  $var wire  8 6 rxdata [7:0] $end
  $var wire  1 8 rxready $end
  $var wire  8 - ss0 [7:0] $end
  $var wire  8 , ss1 [7:0] $end
  $var wire  8 + ss2 [7:0] $end
  $var wire  8 * ss3 [7:0] $end
  $var wire  8 ) ss4 [7:0] $end
  $var wire  8 ( ss5 [7:0] $end
  $var wire  8 ' ss6 [7:0] $end
  $var wire  8 & ss7 [7:0] $end
  $var wire  1 4 txclk $end
  $var wire  8 3 txdata [7:0] $end
  $var wire  1 5 txready $end
  $scope module top $end
   $var wire  1 2 blue $end
   $var wire  1 1 green $end
   $var wire  1 # hz100 $end
   $var wire  8 . left [7:0] $end
   $var wire 21 % pb [20:0] $end
   $var wire  1 0 red $end
   $var wire  1 $ reset $end
   $var wire  8 / right [7:0] $end
   $var wire  1 7 rxclk $end
   $var wire  8 6 rxdata [7:0] $end
   $var wire  1 8 rxready $end
   $var wire  8 - ss0 [7:0] $end
   $var wire  8 , ss1 [7:0] $end
   $var wire  8 + ss2 [7:0] $end
   $var wire  8 * ss3 [7:0] $end
   $var wire  8 ) ss4 [7:0] $end
   $var wire  8 ( ss5 [7:0] $end
   $var wire  8 ' ss6 [7:0] $end
   $var wire  8 & ss7 [7:0] $end
   $var wire  1 4 txclk $end
   $var wire  8 3 txdata [7:0] $end
   $var wire  1 5 txready $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#1
0#
0$
b000000000000000000000 %
b10010001 &
b10001011 '
b11111000 (
b01110011 )
b11101011 *
b00011001 +
b10111000 ,
b11101001 -
b11000110 .
b00100100 /
10
11
12
b01000001 3
14
05
b00100111 6
07
08
#2
b000000000000000000001 %
#3
b000000000000000000010 %
#4
b000000000000000000011 %
b00100101 /
#5
b000000000000000000100 %
#6
b000000000000000000101 %
b00100100 /
#7
b000000000000000000110 %
b00100101 /
